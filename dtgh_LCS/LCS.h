
/**********************************************
时间：2016年3月17日15:50:14
耗时两个小时多
原因：对c++二维数组作为参数传递的不了解
    以及细节的考虑不周
    最终采取栈实现了输出，没有用prin_lcs函数

下面计划实现的那个函数实现在了上一个之内
是得到最长连续相同字符串

get_lcs函数：
得到最长公共子序列
**********************************************/
//void print_lcs(char *x,char **y,int i,int j);
void get_lcs(char *x,char *y);
void get_lxlcs(char *x,char *y);


/**
    给定x=<x1,x2.....xm>
        y=<y1,....yn>
    如果xm=yn，则lcs的长度是xm-1与yn-1的lcs长度加一
    否则，为xm-1与yn或者xm与yn-1的lcs长度，去最大值

    递归式：
        c[i][j] = {  0                        i=0||j=0
                  {  c[i-1][j-1]+1            i,j>0,xi=yj
                  {  max(c[i][j-1],c[i-1][j])  i,j>0,xi!=yj

        程序中实现的时候，ij要视情况而定，因为x0=y0会出现
        该代码实现方案为：c设定时，横纵坐标各加一，以c[1][1]
        记录x0，y0
**/
